{"ast":null,"code":"var _jsxFileName = \"/Users/ravithanu/Desktop/Pdf view/client/src/components/Pdf/Pdf.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport React from 'react';\nimport axios from 'axios';\nimport \"./pdf.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Pdf = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [allPdf, setAllPdf] = useState([]);\n  useEffect(() => {\n    getPdf();\n  }, []);\n  const getPdf = async () => {\n    try {\n      const result = await axios.get(\"http://localhost:8080/api/pdf/get-files\");\n      setAllPdf(result.data.data);\n    } catch (error) {\n      console.error(\"Error fetching PDF files\", error);\n    }\n  };\n  const submitFile = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"file\", file);\n    try {\n      const result = await axios.post(\"http://localhost:8080/auth/pdf/upload-files\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (result.data.status === \"ok\") {\n        alert(\"Uploaded Successfully!!!\");\n        getPdf();\n      }\n    } catch (error) {\n      console.error(\"Error uploading file\", error);\n    }\n  };\n  const showPdf = pdf => {\n    window.open(`http://localhost:8080/api/files/${pdf}`, \"_blank\", \"noreferrer\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitFile,\n        className: \"pdf-Con\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Upload PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"pdf-name\",\n          placeholder: \"PDF Title\",\n          required: true,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"pdf-pdf\",\n          accept: \"application/pdf\",\n          required: true,\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pdf-button\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadedFile\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Uploaded PDFs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), allPdf.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No PDFs uploaded yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this) : allPdf.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Title: \", data.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => showPdf(data.pdf),\n            children: \"Show PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Pdf, \"v0DcxNYB0bP4TI38zV204Z9s/ps=\");\n_c = Pdf;\nvar _c;\n$RefreshReg$(_c, \"Pdf\");","map":{"version":3,"names":["useEffect","useState","React","axios","jsxDEV","_jsxDEV","Pdf","_s","title","setTitle","file","setFile","allPdf","setAllPdf","getPdf","result","get","data","error","console","submitFile","e","preventDefault","formData","FormData","append","post","headers","status","alert","showPdf","pdf","window","open","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","onChange","target","value","accept","files","length","map","onClick","_c","$RefreshReg$"],"sources":["/Users/ravithanu/Desktop/Pdf view/client/src/components/Pdf/Pdf.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport React from 'react'\nimport axios from 'axios';\nimport \"./pdf.css\"\n\n\n\nexport const Pdf = () => {\n    const [title, setTitle] = useState(\"\");\n    const [file, setFile] = useState(null);\n    const [allPdf, setAllPdf] = useState([]);\n  \n\n  useEffect(() => {\n    getPdf();\n  }, []);\n\n  const getPdf = async () => {\n    try {\n      const result = await axios.get(\"http://localhost:8080/api/pdf/get-files\");\n      setAllPdf(result.data.data);\n    } catch (error) {\n      console.error(\"Error fetching PDF files\", error);\n    }\n  };\n\n  const submitFile = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"file\", file);\n\n    try {\n      const result = await axios.post(\n        \"http://localhost:8080/auth/pdf/upload-files\",\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n      if (result.data.status === \"ok\") {\n        alert(\"Uploaded Successfully!!!\");\n        getPdf();\n      }\n    } catch (error) {\n      console.error(\"Error uploading file\", error);\n    }\n  };\n\n  const showPdf = (pdf) => {\n    window.open(`http://localhost:8080/api/files/${pdf}`, \"_blank\", \"noreferrer\");\n  \n  };\n\n  \n  return (\n    <div className='pdf'>\n      <div className=\"right\">\n        <form onSubmit={submitFile} className='pdf-Con'>\n        <h3>Upload PDF</h3>\n        <input\n          type=\"text\"\n          className='pdf-name'\n          placeholder='PDF Title'\n          required\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <input\n          type=\"file\"\n          className='pdf-pdf'\n          accept='application/pdf'\n          required\n          onChange={(e) => setFile(e.target.files[0])}\n        />\n        <button className=\"pdf-button\" type='submit'>Submit</button>\n      </form></div>\n      <div className=\"left\">\n\n      <div className=\"uploadedFile\">\n        <h4>Uploaded PDFs</h4>\n        {allPdf.length === 0 ? (\n          <p>No PDFs uploaded yet.</p>\n        ) : (\n          allPdf.map((data) => (\n            <div className=\"inner-div\">\n              <h6>Title: {data.title}</h6>\n              <button\n                className=\"button\"\n                onClick={() => showPdf(data.pdf)}\n              >\n                Show PDF\n              </button>\n            </div>\n          ))\n        )}\n      </div>\n      </div>\n      \n      \n\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}