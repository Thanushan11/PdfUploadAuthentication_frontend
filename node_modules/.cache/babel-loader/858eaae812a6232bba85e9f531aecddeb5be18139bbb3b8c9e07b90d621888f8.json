{"ast":null,"code":"var _jsxFileName = \"/Users/ravithanu/Desktop/Pdf view/client/src/components/Pdf/Pdf.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport React from 'react';\nimport axios from 'axios';\n// import PdfComp from \"./pdfComp.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Pdf = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [allPdf, setAllPdf] = useState([]);\n  const [pdfFile, setPdfFile] = useState(null);\n  useEffect(() => {\n    getPdf();\n  }, []);\n  const getPdf = async () => {\n    try {\n      const result = await axios.get(\"http://localhost:8080/api/users/get-files\");\n      setAllPdf(result.data.data);\n    } catch (error) {\n      console.error(\"Error fetching PDF files\", error);\n    }\n  };\n  const submitFile = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"file\", file);\n    try {\n      const result = await axios.post(\"http://localhost:8080/api/users/upload-files\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (result.data.status === \"ok\") {\n        alert(\"Uploaded Successfully!!!\");\n        getPdf();\n      }\n    } catch (error) {\n      console.error(\"Error uploading file\", error);\n    }\n  };\n  const showPdf = pdf => {\n    setPdfFile(`http://localhost:8080/api/users/files/${pdf}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitFile,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"pdf-name\",\n        placeholder: \"PDF Title\",\n        required: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"pdf-pdf\",\n        accept: \"application/pdf\",\n        required: true,\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pdf-button\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadedFile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Uploaded PDFs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), allPdf.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No PDFs uploaded yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : allPdf.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Title: \", data.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => showPdf(data.pdf),\n          children: \"Show PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)]\n      }, data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Pdf, \"E7TEy/1uOLhSjLVBo63jz49MMik=\");\n_c = Pdf;\nvar _c;\n$RefreshReg$(_c, \"Pdf\");","map":{"version":3,"names":["useEffect","useState","React","axios","jsxDEV","_jsxDEV","Pdf","_s","title","setTitle","file","setFile","allPdf","setAllPdf","pdfFile","setPdfFile","getPdf","result","get","data","error","console","submitFile","e","preventDefault","formData","FormData","append","post","headers","status","alert","showPdf","pdf","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","onChange","target","value","accept","files","length","map","onClick","id","_c","$RefreshReg$"],"sources":["/Users/ravithanu/Desktop/Pdf view/client/src/components/Pdf/Pdf.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport React from 'react'\nimport axios from 'axios';\n// import PdfComp from \"./pdfComp.jsx\";\n\n\nexport const Pdf = () => {\n    const [title, setTitle] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [allPdf, setAllPdf] = useState([]);\n  const [pdfFile, setPdfFile] = useState(null);\n\n  useEffect(() => {\n    getPdf();\n  }, []);\n\n  const getPdf = async () => {\n    try {\n      const result = await axios.get(\"http://localhost:8080/api/users/get-files\");\n      setAllPdf(result.data.data);\n    } catch (error) {\n      console.error(\"Error fetching PDF files\", error);\n    }\n  };\n\n  const submitFile = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"file\", file);\n\n    try {\n      const result = await axios.post(\n        \"http://localhost:8080/api/users/upload-files\",\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n      if (result.data.status === \"ok\") {\n        alert(\"Uploaded Successfully!!!\");\n        getPdf();\n      }\n    } catch (error) {\n      console.error(\"Error uploading file\", error);\n    }\n  };\n\n  const showPdf = (pdf) => {\n    setPdfFile(`http://localhost:8080/api/users/files/${pdf}`);\n  };\n\n  return (\n    <div className='pdf'>\n      <form onSubmit={submitFile}>\n        <h3>Upload PDF</h3>\n        <input\n          type=\"text\"\n          className='pdf-name'\n          placeholder='PDF Title'\n          required\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <input\n          type=\"file\"\n          className='pdf-pdf'\n          accept='application/pdf'\n          required\n          onChange={(e) => setFile(e.target.files[0])}\n        />\n        <button className=\"pdf-button\" type='submit'>Submit</button>\n      </form>\n      <div className=\"uploadedFile\">\n        <h4>Uploaded PDFs</h4>\n        {allPdf.length === 0 ? (\n          <p>No PDFs uploaded yet.</p>\n        ) : (\n          allPdf.map((data) => (\n            <div className=\"inner-div\" key={data.id}>\n              <h6>Title: {data.title}</h6>\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => showPdf(data.pdf)}\n              >\n                Show PDF\n              </button>\n            </div>\n          ))\n        )}\n      </div>\n\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}